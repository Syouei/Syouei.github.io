<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用OpenPGP实现邮件端到端加密</title>
    <link href="/posts/2737.html"/>
    <url>/posts/2737.html</url>
    
    <content type="html"><![CDATA[<p>简介</p><p>什么是OpenPGP？</p><blockquote><p>OpenPGP是一种以安全的“端到端”方式对数据（例如电子邮件）进行加密和/或签名的方法。这意味着，邮件在您的计算机上使用收件人的公钥进行加密，电子邮件服务器不知道邮件的内容。然后，邮件的收件人使用其私钥在自己的计算机上解密邮件。</p></blockquote><p>我们不是来探讨技术原理的，所以说，本文不会深入涉及密码学概念，实用是本文的目的。邮件本身就是实用的东西，我们每天都在用QQ、163发文件，存资料，然而我们邮件的内容是否是安全的呢？邮件的内容是否会受到<br> 或泄露？有没有大他者正watching<br>you？不搞清楚这些问题，总感觉安全感受到侵犯。可惜国内公司一向不重视用户隐私权，在他们眼里，“中国用户愿意用隐私换‘便利’”，窥视用户数据好像成了一件里所应当的事情。口头上的承诺是廉价的，只有技术上的保证是有力的。</p><p>OpenPGP推出十多年了，然而在国内未得到重视，未被广泛使用，向普通用户介绍这一工具，从而维护通信自由与秘密的权利，这就是我写下本文的目的。</p><h2 id="邮箱客户端"><a href="#邮箱客户端" class="headerlink" title="邮箱客户端"></a>邮箱客户端</h2><p>以下是使用OpenPGP加密邮件的必要条件：</p><blockquote><p>1.一个支持IMAP/POP3和SMTP的邮箱账户<br>2.支持PGP的邮箱客户端<br>3.双方都有可用的PGP密钥<br>4.知道对方的公钥</p></blockquote><p>注册邮箱用第三方客户端登陆邮箱账户不在本文讨论范围。由于端到端加密的特性，我们可以不考虑邮件服务器的安全性了。</p><p>根据官网介绍，Windows平台上支持OpenPGP的邮箱客户端有Claws Mail、eM Client、EverDesk、The Bat!等，我则推荐选用Mozilla开发的<strong>Thunderbird</strong>，它功能强大，开源，可扩展性强，用户较多。Linux/Max平台上的客户端则大多支持OpenPGP标准。安卓可用K-9 Mail，顺便提一句，前两天Thunderbird好像接手了K-9 Mail的开发。</p><p>网上一些年代比较久远的教程还涉及PGPDesktop、Enigmail插件等，而Thunderbird早已原生自带了一个简洁易用的OpenPGP密钥管理器，不必另行安装，方便很多。</p><p>官网：<a href="https://www.thunderbird.net/zh-CN/">https://www.thunderbird.net/zh-CN/</a></p><h2 id="创建个人密钥"><a href="#创建个人密钥" class="headerlink" title="创建个人密钥"></a>创建个人密钥</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>通过右上角菜单键，打开“账户设置”标签页，进入“端到端加密”设置页，点“添加密钥”为账户创建OpenPGP密钥</p><p><img src="https://pic1.zhimg.com/80/v2-dcf05868204583fe7fde5895a236eb04_1440w.webp?source=d16d100b"></p><p>如果已有密钥，导入到新客户端则选第二项，验证并导入私钥。</p><p><img src="https://picx.zhimg.com/80/v2-724410920631eaf7804f6a38422b82c3_1440w.webp?source=d16d100b"></p><p>有效期可以设置的长一点，不必频繁换。据估计，按照目前的算力，破解RSA-3072需要二十年，破解EdDSA密钥则更久，况且也没人会闲的搞你去。密钥类型，ECC体积小，运算快，RSA则兼容性更好。</p><p><img src="https://pica.zhimg.com/80/v2-96ee3a14c2645382c374ed6e1d982f4a_1440w.webp?source=d16d100b"></p><p>如图，成功生成了OpenPGP密钥</p><p><img src="https://picx.zhimg.com/80/v2-d1515295a71674a06469fb0735520821_1440w.webp?source=d16d100b"></p><h3 id="备份密钥"><a href="#备份密钥" class="headerlink" title="备份密钥"></a>备份密钥</h3><p><img src="https://picx.zhimg.com/80/v2-f037fc069a29f1690c5fa10c8cbcead7_1440w.webp?source=d16d100b"></p><p>设置密码，之后就得到了一个私钥备份。要留存好这个私钥，更换电脑了需要导入它。公钥则不必备份，因为公钥是私钥的一部分，通过私钥可以推算出公钥，反过来则不行。</p><h3 id="导出公钥，并发布到公共服务器"><a href="#导出公钥，并发布到公共服务器" class="headerlink" title="导出公钥，并发布到公共服务器"></a>导出公钥，并发布到公共服务器</h3><p>前面提到，要给人写邮件，必须知道对方的公钥，那现在换位思考，如果别人要给你写邮件的话，也需要知道你的公钥。</p><p><img src="https://picx.zhimg.com/80/v2-3b2920f25da6f69ee2e9495bfd09d4e2_1440w.webp?source=d16d100b"></p><p>如果写邮件之前都手动交换密钥当然可以，但未免有点麻烦，PGP Key Server则解决了这个问题。KeyServer是一个数据库，用户把各自的公钥上传上去，别人要给你写邮件只需到KeyServer上查询你的公钥即可。</p><blockquote><p>KeyServer服务器 ：<br><a href="https://keys.openpgp.org/">https://keys.openpgp.org/</a> （推荐）<br><a href="http://keyserver.pgp.com/">http://keyserver.pgp.com/</a><br><a href="https://keyserver.ubuntu.com/">https://keyserver.ubuntu.com/</a><br><a href="http://pgp.mit.edu/">http://pgp.mit.edu/</a><br>……</p></blockquote><p>访问 <a href="https://keys.openpgp.org/upload">https://keys.openpgp.org/upload</a> ，上传刚刚导出的公钥（文件名里带pub的）</p><p><img src="https://pic1.zhimg.com/80/v2-7feab264cd0e7cd6d8b425bc6d2372db_1440w.webp?source=d16d100b"></p><p>点”Send Verification Email“，发送验证邮件，然后登录邮箱，访问链接验证。完事。</p><p><img src="https://picx.zhimg.com/80/v2-6aba03330cf5b883eed1845d00d328ee_1440w.webp?source=d16d100b"></p><h2 id="邮件收发"><a href="#邮件收发" class="headerlink" title="邮件收发"></a>邮件收发</h2><h3 id="获取公钥"><a href="#获取公钥" class="headerlink" title="获取公钥"></a>获取公钥</h3><p>要给别人发邮件，需要对方的公钥。如果对方也使用OpenPGP，并在KeyServer公布了公钥，我们就可以在网上检索到。</p><p>点Thunderbird右上角菜单-工具，打开OpenPGP密钥管理器，点密钥服务器-在网上寻找密钥，查询到后接受并导入。（Protonmail等加密邮箱也支持OpenPGP，也能搜到，给Proton邮箱发件记得附带公钥）</p><p><img src="https://picx.zhimg.com/80/v2-64de5cac281fb6997f0468db4b8b1cbf_1440w.webp?source=d16d100b"></p><p><img src="https://picx.zhimg.com/80/v2-bb42b58a38a8a235ccd70e154c247aea_1440w.webp?source=d16d100b"></p><h3 id="发邮件"><a href="#发邮件" class="headerlink" title="发邮件"></a>发邮件</h3><p>启用加密。加密确保内容私密，签名可确保内容完整，不签也行。主题加密就是标题也加密。对方给你发件也需要你的公钥，如果对方知道你的公钥可不附带。</p><p><img src="https://picx.zhimg.com/80/v2-2950df0328ee9daee83e9a431a0beec0_1440w.webp?source=d16d100b"></p><p>成功收到邮件。必须用支持OpenPGP的客户端，否则收到被加密的附件。客户端必须导入了你的OpenPGP私钥，才能正确解密。</p><p>（原发布于：2022-06-17 <a href="https://zhuanlan.zhihu.com/p/530339245">zhihu</a> ）</p><blockquote><p>欢迎联系测试！</p><p>我的邮箱：<br><a href="mailto:&#x5a;&#104;&#117;&#x43;&#82;&#x40;&#x68;&#111;&#116;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;">&#x5a;&#104;&#117;&#x43;&#82;&#x40;&#x68;&#111;&#116;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a></p><p>PGP公钥：<br>—–BEGIN PGP PUBLIC KEY BLOCK—–<br>xjMEY0/txxYJKwYBBAHaRw8BAQdAGUw1e7Lj/K3mXA/ZSztgncuZyQJV5ZZf8+Vs<br>43fF1LnNH0NoZW5nIFIuWmh1IDx6aHVjckBob3RtYWlsLmNvbT7CkwQTFgoAOxYh<br>BLLP6v2ir+7agvNmoq1l8xB8PD+7BQJjT+3HAhsjBQsJCAcCAiICBhUKCQgLAgQW<br>AgMBAh4HAheAAAoJEK1l8xB8PD+7kpsBAKcZ2+RebLihFm5zH8VIEW4AcGBILxa4<br>OclDzSdZHceOAQCdfAYg2xFLm1WcigwbC6MpuqT5JmicdePN/lbSYXNdCM44BGNP<br>7ccSCisGAQQBl1UBBQEBB0DbLczjolTYwinnPJGegvZp1tO2u6qBWAfrgKdnm2ke<br>AAMBCAfCeAQYFgoAIBYhBLLP6v2ir+7agvNmoq1l8xB8PD+7BQJjT+3HAhsMAAoJ<br>EK1l8xB8PD+7/J8A/0cg98mxD0D4siaxt2NPdfDitg1i428XtCvOc+G9w2lKAQDM<br>bodQCEJk2U8UfXSSWUGgP/Xm2A4tcZoh5BsEe3PDBw==<br>=nVJu<br>—–END PGP PUBLIC KEY BLOCK—–</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>IPFS Desktop备份IPNS发布密钥</title>
    <link href="/posts/baf1.html"/>
    <url>/posts/baf1.html</url>
    
    <content type="html"><![CDATA[<h5 id="1-添加环境变量"><a href="#1-添加环境变量" class="headerlink" title="1.添加环境变量"></a>1.添加环境变量</h5><p>将以下目录添加至系统变量Path：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">%IPFS Desktop安装目录%\resources\app.asar.unpacked\node_modules\kubo\kubo<br></code></pre></td></tr></table></figure><h5 id="2-使用ipfs-key-export命令导出密钥"><a href="#2-使用ipfs-key-export命令导出密钥" class="headerlink" title="2.使用ipfs key export命令导出密钥"></a>2.使用<code>ipfs key export</code>命令导出密钥</h5><p>命令用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">ipfs key export [选项] &lt;密钥名称&gt;<br></code></pre></td></tr></table></figure><p><code>-f</code>参数：指定导出的私钥文件格式。可选值为<code>libp2p-protobuf-cleartext</code><br>和<code>pem-pkcs8-cleartext</code>。默认为libp2p，IPNS的原生格式，pem是通用格式。</p><p><code>-o</code>参数：指定导出文件的保存路径和文件名。如果不指定，文件会默认保存在当前目录，文件名是 <code>&lt;密钥名称&gt;.key</code></p><p>获取列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">ipfs init<br>ipfs key list<br></code></pre></td></tr></table></figure><p>导出密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">ipfs key export -f pem-pkcs8-cleartext -o &quot;%USERPROFILE%\Desktop\exported_key.pem&quot; mykey<br></code></pre></td></tr></table></figure><p>以上命令表示，以pem-pkcs8-cleartext格式将密钥<code>mykey</code>导出到桌面的<code>exported_key.pem</code>文件。导出的密钥是未加密的，应妥善保存。</p><h5 id="3-使用ipfs-key-import命令导出密钥"><a href="#3-使用ipfs-key-import命令导出密钥" class="headerlink" title="3.使用ipfs key import命令导出密钥"></a>3.使用<code>ipfs key import</code>命令导出密钥</h5><p>命令用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">ipfs key import [选项] &lt;密钥名称&gt; &lt;密钥文件路径&gt;<br></code></pre></td></tr></table></figure><p><code>-f</code> 指定导入的私钥文件格式。可选值：<code>libp2p-protobuf-cleartext</code>、<code>pem-pkcs8-cleartext</code></p><p><code>--ipns-base=&lt;编码格式&gt;</code> 指定 IPNS 密钥的编码格式。可选值：<code>b58mh</code>、<code>base36</code>（默认）、<code>base32</code> 等。</p><p><code>--allow-any-key-type</code> 允许导入任何类型的密钥</p><p>用例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">ipfs key import mykey &quot;%USERPROFILE%\Desktop\exported_key.pem&quot; -f pem-pkcs8-cleartext<br></code></pre></td></tr></table></figure><p>以上命令表示，将桌面上pem-pkcs8-cleartext格式的密钥文件<code>exported_key.pem</code>导入为密钥<code>mykey</code></p><p><em>原发布于：<a href="https://zhuanlan.zhihu.com/p/1941802211232441489">https://zhuanlan.zhihu.com/p/1941802211232441489</a></em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>为Matrix与Telegram建立桥接（Bridge）</title>
    <link href="/posts/1641.html"/>
    <url>/posts/1641.html</url>
    
    <content type="html"><![CDATA[<p>本文介绍一种为Matrix聊天室与Telegram群组建立网桥（Matrix-Telegram-Bridge）的方法，此方法利用了t2bot.io提供的公共网桥服务。通过架设网桥，Matrix聊天室与Telegram群组间可实现消息互通。但是请注意，此方法不适用于加密聊天室。</p><p>1.将Bot邀请进要进行桥接的Matrix聊天室与Telegram群组。<br>·在Matrix客户端（以Element为例）中进入群组，打开更多选项—设置—成员，点右下角邀请按钮，将用户**@telegram:t2bot.io<strong>邀请加入聊天室。<br>·在Telegram客户端进入群组详情页，点邀请新成员，邀请</strong>@matrix_t2bot**加入群组。</p><p>2.在Telegram群组聊天框中输入并向bot发送**/id**命令，等待bot回复，获得此群组的id号。</p><p>3.回到Matrix客户端，进入聊天室，发送**!tg bridge -xxxxx<strong>命令（“-xxxxx”是步骤2中获得的Tg群组id好，注意“-”符号与空格）。此时如果配置正确，bot会要求你验证，输入</strong>continue**命令确认即完成配置。</p><p>配置好网桥后，两个平台的消息将由bot互相转发，bot将为Telegram用户创建Matrix账户，而Matrix用户在Telegram中将由bot显示。最好把bot设置成协管员。</p><p>P.S.有朋友说Matrix在国内没法正常使用，这个说法其实不对。无法正常使用的只是matrix.org提供的Homeserver而已，而Matrix协议并没有被禁止。作一个比喻，Matrix就像邮箱一样，matrix.org只是其中一个邮箱服务提供商，此外还有成百上千个别的提供商，甚至你自己也能搭建。Gmail用不了我们就用163，实际大多数Homeserver都是可以正常用的。正如163和Gmail用户可以互相发邮件，托管在不同Homeserver的用户或聊天室也能互相交流，我们可以选择一个信任的提供商托管账号。这里有一份公共Matrix服务器列表可供选择参考。</p><blockquote><p>最后推荐几个比较活跃的中文频道吧：<br>#delicious:retirenow.top（美食群）<br>#yingshiju:cybre.space（电影交流群）<br>#game-recommend:bgme.me（游戏推荐群）<br>#tuna:matrix.org（清华大学TUNA技术群）</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>“Your Element is misconfigured”错误的解决</title>
    <link href="/posts/165a.html"/>
    <url>/posts/165a.html</url>
    
    <content type="html"><![CDATA[<p>笔者昨天装了个Element For Windows，结果一打开就“Failed to start”，报错“Your Element is misconfigured  Invalid homeserver discovery response”</p><p>笔者百度未果，转而咨询了社区志愿者得知是默认Homeserver的问题，并按官方文档修改默认配置解决了问题。鉴于国内相关资料较少，把这次经历分享出来供大家参考。</p><p>Element默认的Homeserver是官方实例，由于种种原因连不上，是问题发生的原因。解决方法也比较简单，修改自定义配置，指定一个能用的Homeserver就行了。</p><p>转到Element程序目录，一般是 %AppData%/Element ，在Element目录下新建一个文件并命名为 config.json </p><p>编辑config.json，添加如下字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;<br>   &quot;default_server_config&quot;: &#123;<br>      &quot;m.homeserver&quot;: &#123;<br>         &quot;base_url&quot;: &quot;https://matrixim.cc&quot;<br>      &#125;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中”base_url”项的值需要修改成你指定的Homeserver，修改后保存即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>动漫网站汇总（持续更新）</title>
    <link href="/posts/7e52.html"/>
    <url>/posts/7e52.html</url>
    
    <content type="html"><![CDATA[<h1 id="动漫网站"><a href="#动漫网站" class="headerlink" title="动漫网站"></a>动漫网站</h1><table><thead><tr><th>名称</th><th>网址</th><th>备注</th></tr></thead><tbody><tr><td>樱花动漫(imomoe)</td><td><a href="http://www.imomoe.live/">http://www.imomoe.live/</a></td><td></td></tr><tr><td>樱花动漫(yhdm)</td><td><a href="http://www.yinghuacd.com/">http://www.yinghuacd.com/</a></td><td></td></tr><tr><td>樱花动漫(dm321)</td><td><a href="https://www.dm321.com/">https://www.dm321.com/</a></td><td></td></tr><tr><td>AGE动漫</td><td><a href="https://www.agefans.live/">https://www.agefans.live/</a></td><td></td></tr><tr><td>AGE动漫(TW)</td><td><a href="https://agefans.tw/">https://agefans.tw/</a></td><td>台湾网站，繁体</td></tr><tr><td>Bimi动漫(M站)</td><td><a href="https://www.bimiacg4.net/">https://www.bimiacg4.net/</a></td><td>不开放注册，但可观看</td></tr><tr><td>ZzzFun</td><td><a href="http://www.zzzfun.com/">http://www.zzzfun.com/</a></td><td></td></tr><tr><td>OmoFun</td><td><a href="https://omofun.com/">https://omofun.com/</a></td><td></td></tr><tr><td>风车动漫(p)</td><td><a href="https://www.dm530p.net/">https://www.dm530p.net/</a></td><td>与樱花动漫(p)一毛一样</td></tr><tr><td>樱花动漫(p)</td><td><a href="https://www.yhdmp.net/">https://www.yhdmp.net/</a></td><td></td></tr><tr><td>5弹幕</td><td><a href="https://www.5dm.app/">https://www.5dm.app/</a></td><td>注册收费</td></tr><tr><td>捏他弹幕</td><td><a href="http://www.nieta.co/">http://www.nieta.co/</a></td><td></td></tr><tr><td>风车动漫(92wuc)</td><td><a href="https://www.92wuc.com/">https://www.92wuc.com/</a></td><td></td></tr><tr><td>橘子动漫</td><td><a href="https://www.mgnacg.com/">https://www.mgnacg.com/</a></td><td>需要邀请码（免费）</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="动漫BT资源站"><a href="#动漫BT资源站" class="headerlink" title="动漫BT资源站"></a>动漫BT资源站</h1><table><thead><tr><th>名称</th><th>网址</th></tr></thead><tbody><tr><td>漫猫动漫发布页</td><td><a href="https://www.comicat.org/">https://www.comicat.org/</a></td></tr><tr><td>末日动漫资源库</td><td><a href="https://share.acgnx.se/">https://share.acgnx.se/</a></td></tr><tr><td>ACG.RIP</td><td><a href="https://acg.rip/">https://acg.rip/</a></td></tr><tr><td>动漫花园资源网</td><td><a href="https://share.dmhy.org/">https://share.dmhy.org/</a></td></tr><tr><td>简单动漫</td><td><a href="https://www.36dm.club/">https://www.36dm.club/</a></td></tr></tbody></table><h1 id="影视网站"><a href="#影视网站" class="headerlink" title="影视网站"></a>影视网站</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用OpenSSL创建S/MIME自签名证书</title>
    <link href="/posts/8458.html"/>
    <url>/posts/8458.html</url>
    
    <content type="html"><![CDATA[<p>配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">rundll32 sysdm.cpl,EditEnvironmentVariables<br></code></pre></td></tr></table></figure><p>为CA机构创建私钥，并生成自签名证书</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl genrsa -aes256 -out ca.key 4096<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl req -new -x509 -days 3650 -key ca.key -out ca.crt<br></code></pre></td></tr></table></figure><p>创建个人证书私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl genrsa -aes256 -out example_personal_user.key 4096<br></code></pre></td></tr></table></figure><p>创建签名请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl req -new -key example_personal_user.key -out example_personal_user.csr<br></code></pre></td></tr></table></figure><p>签署证书</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl x509 -req -days 3650 -in example_personal_user.csr -CA ca.crt -CAkey ca.key -set_serial 1 -out example_personal_user.crt -addtrust emailProtection -addreject clientAuth -addreject serverAuth -trustout<br></code></pre></td></tr></table></figure><p>导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">openssl pkcs12 -export -in example_personal_user.crt -inkey example_personal_user.key -out example_personal_user.p12<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/posts/37773.html"/>
    <url>/posts/37773.html</url>
    
    <content type="html"><![CDATA[<h5 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h5><p><strong>测试</strong>一下 </p><p>2021年12月19日 CR.Z</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;hello world&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>计算机技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
